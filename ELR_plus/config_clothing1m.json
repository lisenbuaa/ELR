{
    "name": "clothing1M_ELR_plus_resnet50",
    "n_gpu": 1,
    "seed":123,
    

    "arch1": {
        "type": "resnet50",
        "args": {"num_classes":14}
    },

    "arch2": {
        "type": "resnet50",
        "args": {"num_classes":14}
    },

    "mixup_alpha": 1,
    "coef_step": 0,
    "num_classes": 14,
    "ema_alpha": 0.9999,
    "ema_update": true,
    "ema_step": -1,


    "data_loader": {
        "type": "Clothing1MDataLoader",
        "args":{
            "data_dir": "/home/lisen/data/clothing1m",
            "batch_size": 64,
            "batch_size2": 64,
            "num_batches": 3000,
            "shuffle": true,
            "validation_split": 0,
            "num_workers": 16,
            "pin_memory": true
        }
    },

    "optimizer1": {
        "type": "SGD",
        "args":{
            "lr": 0.0025,
            "momentum": 0.9,
            "weight_decay": 1e-3
        }
    },

    "optimizer2": {
        "type": "SGD",
        "args":{
            "lr": 0.0025,
            "momentum": 0.9,
            "weight_decay": 1e-3
        }
    },


    
    "train_loss": {
        "type": "elr_plus_loss",
        "args":{
            "beta": 0.7,
            "lambda": 5,
            "gamma":5
        }
    },

    "val_loss": "cross_entropy",
    "metrics": [
        "my_metric", "my_metric2"
    ],

    "lr_scheduler": {
        "type": "MultiStepLR",
        "args": {
            "milestones": [7],
            "gamma": 0.1
        }
    },

    "trainer": {
        "epochs": 15,
        "warmup": 0,
        "save_dir": "../saved_grouse_v0",
        "save_period": 1,
        "verbosity": 2,
        "label_dir": "saved/",
        
        "monitor": "max val_my_metric",
        "early_stop": 2000,

        "tensorboard": true,
        "mlflow": true,

        "_percent": "Percentage of noise",
        "percent": 0.8,
        "_begin": "When to begin updating labels",
        "begin": 0,
        "_asym": "symmetric noise if false",
        "asym": false
    }
}

